# Preface {.unnumbered}

::: {.callout-note style="color: blue;"}
#### This is work in progress: Finished about 11%
:::

The book has twelfe chapters with 267 pages (appendix and bibliography *not* included.) I skipped Chapter 1 to 4 (83 pages) because I am already familiar with their topics. The percentage is therefore calculated by notes referring to the chapters 5 to 12 (184 pages).

::: my-watch-out
::: my-watch-out-header
WATCH OUT: This is my personal learning material and is therefore
neither an accurate replication nor an authoritative textbook.
:::

:::

I am writing this book as a text for others to read because that forces me to
become explicit and explain all my learning outcomes more carefully.
Please keep in mind that this text is not written by an expert but by a
learner.

Text passages with content I am already familiar I have skipped. In this case I have started with chapter 5 because the chapters 1 to 4 is an introduction into using R which I am already comfortable with. 

Section of the original text where I needed more in-depth knowledge I have
elaborated and added my own comments resulted from my personal research.

::: {.callout-warning}
###### All mistakes are my own responsibility

In spite of replicating most of the content this Quarto book
may contain many mistakes. All the misapprehensions and errors are of
course my own responsibility.
:::




## Content and Goals of this Book {.unnumbered}

This Quarto book collects my personal notes, trials and exercises of  Geographic Data Science With R: Visualizing and Analyzing Environmental Change by Michael Wimberly [@wimberly-2023]. The book is also [available online](https://bookdown.org/mcwimberly/gdswr-book/).

I have some experience with the R language but none working with geodata. I want to use maps to show how statistical results differ by country. My focus is therefore on geodata, e.g., I have skipped chapters 1-4 because I am already familiar with their content of introducing R. I have added some additional material/experiments as separate annex chapters.


## Text passages

### Quotes and personal comments

My text consists mostly of quotes from the [BOOK NAME].

::: my-example
::: my-example-header
::: {#exm-preface-quote}
: Quote
:::
:::

::: my-example-container
XXX: EXAMPLE QUOTE
:::
:::

Often I made minor editing (e.g., shorting the text) or put the content
in my own wording. In this case I couldn't quote the text as it does not
represent a specific text passage. In this case I end
the paraphrase with `(AUTOR NAME ibid.)`.

In any case most of the text in this Quarto book is not mine but coming
from different resources. 

::: my-example
::: my-example-header
::: {#exm-preface-note}
: Personal note
:::
:::

::: my-example-container
::: my-note
::: my-note-header
::: {#cor-preface-note-example}
: This is a personal note
:::
:::

::: my-note-container
In this kind of box I will write my personal thoughts and reflections.
Usually this box will appear stand-alone (without the wrapping example
box).
:::
:::
:::
:::


### Glossary

I am using the {**glossary**} package to create links to glossary
entries.\]

::: my-r-code
::: my-r-code-header
::: {#cnj-load-glossary}
: Load glossary
:::
:::

::: my-r-code-container


```{r}
#| label: load-glossary
#| lst-label: lst-preface-load-glossary
#| lst-cap: "Install and load the glossary package with the appropriate glossary.yml file"


## 1. Install the glossary package:
## https://debruine.github.io/glossary/

library(glossary)

## If you want to use my glossary.yml file:

## 1. fork my repo
##    https://github.com/petzi53/glossary-pb

## 2. Download the `glossary.yml` file from
##    https://github.com/petzi53/glossary-pb/blob/master/glossary.yml)

## 3. Store the file on your hard disk
##    and change the following path accordingly

glossary::glossary_path("../glossary-pb/glossary.yml")

```


:::
:::

If you hover with your mouse over the double underlined links it opens
an window with the appropriate glossary text. Try this example: `r glossary("Z-Score")`.

::: my-watch-out
::: my-watch-out-header
WATCH OUT! Glossary is my private learning vehicle
:::

::: my-watch-out-container
::: {layout="[10, 30]" layout-valign="center"}
![](https://debruine.github.io/glossary/logo.png)

I have added many of the glossary entries when I was working through
other books either taking the text passage of these books I was reading
or via an internet recherche from other resources. I have added the
source of glossary entry. Sometimes I have used abbreviation, but I need
still to provide a key what this short references mean.
:::

:::
:::

If you fork the [XXX: REPO OF THIS BOOK(URL OF THIS BOOK) then the glossary will not
work out of the box. Load down the `glossary.yml` file from [my
glossary-pb GitHub
repo](https://github.com/petzi53/glossary-pb/blob/master/glossary.yml),
store it on your hard disk and change the path in the code chunk
@lst-preface-load-glossary.

In any case I am the only responsible person for this text, especially
if I have used code from the resources wrongly or misunderstood a quoted
text passage.

## R Code and Datasets

### Download datasets

The data files used in each chapter has to be downloaded from https://doi.org/10.6084/m9.figshare.21301212. 

Run the following code chunk only once (manually).

:::::{.my-r-code}
:::{.my-r-code-header}
:::::: {#cnj-00-download-data-files}
: Download Data Files
::::::
:::
::::{.my-r-code-container}
```{r}
#| label: download-data-files
#| results: hold
#| code-fold: show
#| eval: false

base::source(file = "R/helper.R")

## create data folder (only once, e.g., only in this chapter)
baseURL <- here::here()
pb_create_folder(base::paste0(baseURL, "/data"))

url = "https://figshare.com/ndownloader/files/39733921"
utils::download.file(url, base::paste0(baseURL, "/data/gdswr_data.zip"))
utils::unzip(base::paste0(baseURL, "/data/gdswr_data.zip"), 
             exdir = base::paste0(baseURL, "/data"))

## delete .zip file
fn <- (base::paste0(baseURL, "/data/gdswr_data.zip"))
if (file.exists(fn)) {
  file.remove(fn)
}
```

<center>(*For this R code chunk is no output available*)</center>

::::
:::::

::: {.callout-warning}

After I tried to commit my changes, I learned that there is a file `mesodata_large.csv`  in "data/Chapter3" with 151.28 MB. This exceeds GitHub's file size limit of 100.00 MB and can't, therefore, be stored on Github the standard way.   

There is the possibility to use Git Large File Storage - https://git-lfs.github.com. However, I decided against this complexity. Actually, I do not need the files of Chapter1 to Chapter4 as I skipped the starting chapters. Therefore, I could delete this file. However, I have chosen to change `.gitignore` accordingly so that this large file will not be transferred to GitHub.       

:::



### Style guides

Generally I will use the [Tidyverse Style
Guide](https://style.tidyverse.org/) for code chunks. I am going to use underscore (`_`)
or [snake case](https://en.wikipedia.org/wiki/Snake_case) to replace
spaces as studies has shown that it is easier to read [@sharif2010].

Additionally I will use some [Google style modifications](https://google.github.io/styleguide/Rguide.html) from the tidyverse style
guide:

-   Start the names of private functions with `pb_` (not with a dot, as recommended in the Google style guide).
-   Don't use `base::attach()`.
-   No right-hand assignments.
-   Use explicit returns.
-   Qualify namespace.

### Qualifying namespace

Especially the last point (qualifying namespace) is important for my
learning. Besides preventing conflicts with functions of identical names
from different packages it helps to learn (or remember) which function
belongs to which package. I think this justifies the small overhead and
helps to make R code chunks self-sufficient. (No previous package
loading, or library calls in the setup chunk.) To foster learning the
relation between function and package I embrace the package name with
curly brakes and format it in bold.

I am using the package name also for the default installation of base R.
This wouldn't be necessary but it helps me to understand where the base
R functions come from. What follows is a list of base R packages of the
system library included into every installation and attached (opened) by
default:

-   {**base**}: The R Base Package
-   {**datsets**}: The R Datasets Package
-   {**graphics**}: The R Graphics Package
-   {**grDevices**}: The R Graphics Devices and Support for Colours and
    Fonts
-   {**methods**}: Formal Methods and Classes
-   {**stats**}: The R Stats Package
-   {**utils**}: The R Utils Package

### Code linking

Code linking does not work together with code annotation. I am therefore using standard comments for line numbering and explaining it in normal numbered lists after the code chunk. This is not optimal but for learning issues it is important to have link to the original documentations of the packages function.

### Code snippets

I am not using always the exact code snippets for my replications
because I am not only replicating the code to see how it works but also
to change the values of parameters to observe their influences.

When it is clear then I will follow the advice from Hadley Wickham:

> When you call a function, you typically omit the names of data
> arguments, because they are used so commonly. If you override the
> default value of an argument, use the full name ([tidyverse style
> guide](https://style.tidyverse.org/syntax.html)).

XXX: EXPLAIN AND REWRITE DATA USAGE

## Resources

::: {.my-resource}
::: {.my-resource-header}
:::::: {#lem-index-book-resources}
: Resources used for Geographic Datascience with R (GDSWR)
::::::
:::

::: {.my-resource-container}
- Wimberly, M. C. (2023). [Geographic Data Science With R](https://www.amazon.com/-/de/dp/1032347716/): Visualizing and Analyzing Environmental Change (1st ed.). Chapman & Hall/CRC.
- Wimberly, M. C. (2023). Geographic Data Science with R: Visualizing and Analyzing Environmental Change. https://bookdown.org/mcwimberly/gdswr-book/
- Wimberly, M. C. (2022). Geographic Data Science with R [Dataset]. figshare. https://doi.org/10.6084/m9.figshare.21301212.v3
- Dyba, K. (2024, June 26). How to load and save vector data in R. R-Spatial. https://r-spatial.org/r/2024/06/26/sf-load-save.html (additionally used for chapter 5)




:::
:::

## Packages introduced in the preface

:::::{.my-resource}
:::{.my-resource-header}
:::::: {#lem-chap-index-glossary}
glossary: Glossaries for Markdown and Quarto Documents
::::::
:::
::::{.my-resource-container}

***

::: {#pak-glossary}

***

{**glossary**}: [Glossaries for Markdown and Quarto Documents](https://debruine.github.io/glossary/)

Add glossaries to markdown and quarto documents by tagging individual words. Definitions can be provided inline or in a separate file.

::: {layout="[10, 30]" layout-valign="center"}
![](img/logoi/logo-glossary-min.png){width="176"}


There is a lot of necessary jargon to learn for coding. The goal of glossary is to provide a lightweight solution for making glossaries in educational materials written in quarto or R Markdown. This package provides functions to link terms in text to their definitions in an external glossary file, as well as create a glossary table of all linked terms at the end of a section.

:::


{**glossary**}: A Package to Create Glossaries for Markdown and Quarto Documents
:::


***
::::
:::::

## Private Functions

XXX: DESCRIBE PRIVATE FUNCTION USED IN THIS BOOK

## Glossary

```{r}
#| label: glossary-table
#| echo: false

glossary_table()
```

------------------------------------------------------------------------

## Session Info {.unnumbered}

::: my-r-code
::: my-r-code-header
Session Info
:::

::: my-r-code-container
```{r}
#| label: session-info

sessioninfo::session_info()
```
:::
:::

